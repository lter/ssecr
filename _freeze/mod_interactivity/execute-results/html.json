{
  "hash": "5877a40462e57c0565b899f1b0bfd7ba",
  "result": {
    "markdown": "---\ntitle: \"Creating Interactive Apps\"\ncode-annotations: hover\nexecute: \n    eval: false\n---\n\n\n## Overview\n\nShiny is a popular tool that allows users to build interactive web applications without the normally pre-requisite web development expertise. In addition to Shiny apps being simpler to build for the programmer they are often used to allow visitors to perform coding tasks without ever actually writing code. These are huge advantages because they reduce or eliminate significant technical barriers in developing truly interactive applications.\n\nIn synthesis contexts, Shiny can be used for a variety of valuable purposes. You can use it to develop dashboards for sharing data with related communities, allow your team to quickly \"play with\" exploratory graphs, or even to create a data submission portal (as is the case with some <u>R</u>esearch <u>C</u>oordination <u>N</u>etworks or \"RCNs\").\n\nNote that Shiny can be built in either R or Python 'under the hood' but for the purposes of this module we'll focus on R.\n\n## Learning Objectives\n\nAfter completing this topic you will be able to: \n\n- <u>Define</u> the three fundamental components of a Shiny app\n- <u>Explain</u> benefits and limitations of interactive approaches to data exploration\n- <u>Generate</u> an interactive app with Shiny\n- <u>Use</u> text formatting methods in a Shiny app\n- <u>Explore</u> available Shiny layout options\n- <u>Create</u> a Shiny app\n- <u>Describe</u> (briefly) the purpose of deploying a Shiny app\n\n## Needed Packages\n\nIf you'd like to follow along with the code chunks included throughout this module, you'll need to install the following packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Note that these lines only need to be run once per computer\n## So you can skip this step if you've installed these before\ninstall.packages(\"tidyverse\")\ninstall.packages(\"shiny\")\ninstall.packages(\"htmltools\")\ninstall.packages(\"lterdatasampler\")\n```\n:::\n\n\nWe'll load the Tidyverse meta-package here to have access to many of its useful tools when we need them later.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load tidyverse\nlibrary(tidyverse)\n```\n:::\n\n\n## Shiny Fundamentals\n\n\n\n## Including Data\n\n\n\n## Text Formatting\n\n\n\n## Layouts\n\n\n\n## Deployment\n\nWhen Shiny apps are only being used by those in your team, keeping them as a code script works well. However, if you'd like those outside of your team to be able to find your app as they would any other website you'll need to <u>deploy</u> your Shiny app. This process is outside of the scope of this module but is often the end goal of Shiny app development.\n\nTake a look at [Posit's instructions for deployment](https://shiny.posit.co/r/articles/share/deployment-web/) for more details but essentially \"deployment\" is the process of getting your local app hosted on shinyapps.io which gives it a link that anyone can use to access/run your app on their web browser of choice.\n\n## Additional Interactivity Resources\n\n### Papers & Documents\n\n- \n\n### Workshops & Courses\n\n- Posit's [Welcome to Shiny](https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/index.html) (for R coders)\n- 2022 All Scientists' Meeting [Shiny Apps for Sharing Science](https://njlyon0.github.io/asm-2022_shiny-workshop/) workshop\n\n### Websites\n\n- Posit's [Shiny](https://shiny.posit.co/) website\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}