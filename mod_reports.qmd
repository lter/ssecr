---
title: "Reproducible Reports"
code-annotations: hover
---

## Overview

At this point in the course, we anticipate that your synthesis project is--if not finished--in a state where some amount of external-facing products would be beneficial (see our suggested [milestones page](https://lter.github.io/ssecr/proj_milestones.html)). "**Computational notebooks**" (e.g., Quarto documents, Jupyter Notebooks, R Markdown files, etc.) are an excellent choice for creating reproducible documentation that has direct ties to scripts or data files relevant to your project. Effective notebook files allow you to leverage _both_ your technical skills and your scientific communication skills.

This module focuses on the structure and content of these notebooks from a <u>primarily technical</u> lens, so please consult the [communicating findings](https://lter.github.io/ssecr/mod_findings.html) module for the team science perspective.

## Learning Objectives

After completing this module you will be able to: 

- <u>Describe</u> contexts where computational notebooks are useful
- <u>Identify</u> the three fundamental elements of a typical notebook
- <u>Use</u> Markdown syntax to accomplish text styling
- <u>Create</u> notebooks that include a blend of plain text and embedded code chunks
- <u>Make</u> a Quarto website
- <u>Define</u> the purpose of GitHub Actions
- <u>Deploy</u> a notebook with GitHub Pages

## Preparation

1. Install [Quarto](https://quarto.org/docs/get-started/)
2. Double check that your group's GitHub repository is up to date

## Networking Session

::: panel-tabset
### 2024 Guests

To Be Determined!
:::

## Making a Website with Notebooks

Many of you are likely already familiar with the fundamentals of notebook files. So, while we could practice these skills making relatively simple notebook versions of your most important scripts, instead **we'll be making individual or team websites!** This is only a little more work than making a single file and will give you a valuable portfolio addition while you practice these skills.

## Notebook Structure & Value

Files that combine plain text with embedded code chunks are an excellent way of reproducibly documenting workflows and faciliating conversations about said workflows (or their outputs). Examples of notebook files include Quarto documents, Jupyter Notebooks, and R Markdown files. Regardless of the specific type, all of them function in the same way. Each of them allows you to use code chunks in the same way that you might use a typical script but between the code chunks you can add--and format--plain, human-readable text. Arguably you could do this with comments in a script but this format is built around the idea that this plain text is **intended to be interpretable without any prior coding experience**. The plain text can be formatted with Markdown syntax (we'll discuss that in greater depth later) but even unformatted text outside of code chunks is visually 'easier on the eyes' than comment lines in scripts.

Another shared facet of notebook interfaces is that they are meant to be "rendered" (a.k.a. "knit") to produce a different file type that translates code chunks and Markdown-formatted text into something that looks much more similar to what you might produce in Microsoft Word or a Google Doc. Typically such files are rendered into PDFs or HTMLs though there are other output options. These rendered files can then be shared (and opened) outside of coding platforms and thus make their content even more accessible to non-coders.

In synthesis work these reports can be especially valuable because your team may include those with a wealth of discipline insight but not necessarily coding literacy. <u>Creating reports with embedded code can enable these collaborators to engage more fully than they might otherwise be able to if there was essentially a minimum threshold of coding literacy required in order to contribute</u>. These reports can also be useful documentation of past coding decisions and serve as reminders for judgement calls for which no one in the team remembers the rationale.

## LTER SciComp Workshop Materials

The workshop materials we will be working through live [here](https://lter.github.io/workshop-quarto/) but for convenience we have also embedded the workshop directly into the SSECR course website (see below).

 ```{=html}
<iframe src="https://lter.github.io/workshop-quarto/" height="550" width="800" style="border: 1px solid #2e3846;"></iframe>
```

:::{.callout-note icon="false"}
### Activity: Making a Team / Personal Website

Note that you _do not_ need to keep your website up after you make it if you already have one or don't want one but this activity will still be good practice regardless.

Eventually you will likely want a team-wide website. You are absolutely welcome to make this during today's module but because the first draft must be made by a single person, **all but one member of your group must work on individual sites instead**. You can (and should!) revisit your site as a group to make sure all of you are happy with it but creating individual sites today will help all of you develop 'muscle memory' in this arena.

:::

## Customizing Your Quarto Website

You can customize a Quarto website by editing the `_quarto.yml` file. There are _a lot_ of options in this realm so we recommend that **you cannibalize elements from other Quarto websites you like as you find them**. You may find some of the later modules in the above workshop useful in this regard. Feel free to explore those materials and reach out to SSECR design team members if you have questions!

:::{.callout-note icon="false"}
#### Activity: Customize Your Website

Revisit the Quarto website you created for the prior module and

- Decide on your ideal color palette
- Create both a light theme and a dark theme
    - Check out this [LTER working group's {{< fa brands github >}} repository](https://github.com/JamieMcDevittIrwin/CAGED-website) to see how they customized their site

:::

## Additional Resources

### Papers & Documents

- 

### Workshops & Courses

- LTER Scientific Computing Team. [Notebooks versus Scripts](https://lter.github.io/scicomp/tip_notebook-vs-script.html). **2025**.
- Csik, S. [Creating Your Personal Website Using Quarto](https://ucsb-meds.github.io/creating-quarto-websites/). **2024**.
- National Center for Ecological Analysis and Synthesis (NCEAS) Learning Hub. [coreR: Literate Analysis with Quarto](https://learning.nceas.ucsb.edu/2023-10-coreR/session_04.html). **2023**.
- Mecum, B. [Reproducible Papers with RMarkdown](https://nceas.github.io/oss-lessons/reproducible-papers-with-rmd/reproducible-papers-with-rmd.html). **2019**.

### Websites
- [The Markdown Guide: Basic Syntax](https://www.markdownguide.org/basic-syntax/).
- Posit. [Welcome to Quarto](https://quarto.org/)
